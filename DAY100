# QUESTION 146:- Find Largest Value in Each Tree Row
# DESCRIPTION:- Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).

# EXAMPLE1:
  Input: root = [1,3,2,5,3,null,9]
  Output: [1,3,9]

# Example2:
   Input: root = [1,2,3]
  Output: [1,3]

# SOLUTION 146:- 
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> ans;
        int maxi = INT_MIN;
        if(!root) return ans;
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty()){
            int size = q.size();
            if(size == 1){
                TreeNode* front = q.front();
                ans.push_back(front -> val);
                q.pop();
                if(front -> left) q.push(front -> left);
                if(front -> right) q.push(front -> right);
                continue;
            }
            else{
                for(int i = 0; i < size; i++){
                    TreeNode* front = q.front();
                    q.pop();
                    if(maxi < front-> val){
                        maxi = front -> val;
                        if(front -> left) q.push(front -> left);
                        if(front -> right) q.push(front -> right);
                    }
                    else{
                        if(front -> left) q.push(front -> left);
                        if(front -> right) q.push(front -> right);
                        continue;
                    }
                }
                ans.push_back(maxi);
                maxi = INT_MIN;
            }
        }
        return ans;
    }
};
