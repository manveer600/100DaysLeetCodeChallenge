# QUESTION 92:-  Path Sum
# DESCRIPTION:- Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.
A leaf is a node with no children.
# EXAMPLE1:-
  Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22
  Output: true
  Explanation: The root-to-leaf path with the target sum is shown.

# Example 2:
  Input: root = [1,2,3], targetSum = 5
  Output: false
  Explanation: There two root-to-leaf paths in the tree:
  (1 --> 2): The sum is 3.
  (1 --> 3): The sum is 4.
  There is no root-to-leaf path with sum = 5.

# SOLUTION 92:- 
class Solution {
public:
bool solve(TreeNode* root, int targetSum , int sum){
    if(root == NULL){
        return false;
    }

    if(root -> left == NULL && root -> right == NULL){
        if(sum+root->val == targetSum){
            return true;
        }
        return false;
    }

    bool left = solve(root -> left, targetSum, sum + root->val);
    bool right = solve(root -> right , targetSum , sum + root->val);

    return right || left;
}
    bool hasPathSum(TreeNode* root, int targetSum) {
        return solve(root , targetSum , 0);
    }
};
