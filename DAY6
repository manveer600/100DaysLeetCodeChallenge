# QUESTION 9- Remove words in a string
# DESCRIPTION:- Given an input string s, reverse the order of the words.
A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.
# EXAMPLE1:-
  Input: s = "the sky is blue"
  Output: "blue is sky the"

# EXAMPLE2:-
  Input: s = "  hello world  "
  Output: "world hello"
  Explanation: Your reversed string should not contain leading or trailing spaces.


# SOLUTION 9:- 
class Solution {
public:
    string reverseWords(string s) {
        string word;
        string ans;
        int n = s.size();
        stack<string> stack;

        int i = 0 ; 
        while(i < n){

            while(i < n && s[i] == ' '){
                i++;
            }

            while(i < n && s[i] != ' '){
                word.push_back(s[i]);
                i++;
            }

            if(!word.empty()){
                stack.push(word);
                word.clear();
            }
        }

        while(!stack.empty()){
            ans = ans+stack.top();
            stack.pop();

            if(!stack.empty()){
                ans = ans+" ";
            }
        }



    return ans ;
    }
};

      
