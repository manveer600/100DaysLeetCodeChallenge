# QUESTION 7:- Remove Duplicate Letters 
# DESCRIPTION:- Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order
 among all possible results.
# EXAMPLE1:-
  Input: s = "bcabc"
  Output: "abc"

# EXAMPLE2:-
  Input: s = "cbacdcbc"
  Output: "acdb"


# SOLUTION7:- 
class Solution {
public:
    string removeDuplicateLetters(string s) {
        string str;
        stack<char> st;

        unordered_map<char,int>count;
        unordered_map<char,bool> visited;

        for(int i = 0 ; i <s.size(); i++){
            count[s[i]]++;
            visited[s[i]]=false;
        }

        for(int i = 0; i < s.size() ; i++){
            count[s[i]]--;
            if(visited[s[i]]){
                continue;
            }

            while(!st.empty() && st.top() > s[i] && count[st.top()] > 0){
                visited[st.top()] = false;
                st.pop();
            }

            st.push(s[i]);
            visited[s[i]] = true;
        }


        while(!st.empty()){
            str.push_back(st.top());
            st.pop();
        }

        reverse(str.begin(),str.end());
        return str;
    }
};
